<?php

namespace App\Console\Commands\EncryptDescrypt;

use Illuminate\Console\Command;
use Illuminate\Support\Facades\Crypt;

class EncryptKeyCommand extends Command
{
    protected $signature = 'key:encrypt {key} {--save-env} {--env-key=SECRET_KEY}';
    protected $description = '–®–∏—Ñ—Ä—É–µ—Ç –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –∫–ª—é—á, –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –∏ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ .env';

    public function handle(): int
    {
        $key = $this->argument('key');
        $encryptedKey = Crypt::encryptString($key);

//        // –õ–æ–≥–∏—Ä—É–µ–º
//        Log::info('üîí –ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–ª—é—á:', [
//            'original' => $key,
//            'encrypted' => $encryptedKey,
//        ]);

        // –í—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å
        $this->info('‚úÖ –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∫–ª—é—á: ' . $key);
        $this->info('üîí –ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–ª—é—á: ' . $encryptedKey);

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ .env –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        if ($this->option('save-env')) {
            $envKey = $this->option('env-key');
            $this->saveToEnv($envKey, $encryptedKey);
            $this->info("‚úÖ –ö–ª—é—á —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ .env –∫–∞–∫ {$envKey}");
        }

        return self::SUCCESS;
    }

    private function saveToEnv(string $key, string $value): void
    {
        $envPath = base_path('.env');

        if (!file_exists($envPath)) {
            $this->error('–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!');
            return;
        }

        $content = file_get_contents($envPath);

        if (preg_match("/^{$key}=.*/m", $content)) {
            // –ï—Å–ª–∏ –∫–ª—é—á —É–∂–µ –µ—Å—Ç—å ‚Äî –∑–∞–º–µ–Ω—è–µ–º –µ–≥–æ
            $content = preg_replace("/^{$key}=.*/m", "{$key}={$value}", $content);
        } else {
            // –ò–Ω–∞—á–µ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π
            $content .= "\n{$key}={$value}\n";
        }

        file_put_contents($envPath, $content);
    }
}
